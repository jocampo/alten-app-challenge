swagger: "2.0"
info:
  version: 1.0.0
  title: Cancun Hotel API
  description: API used to manage guests, rooms and reservations for the last Cancun Hotel
  contact:
    email: "jorge.luis.ocampo.mascaro@gmail.com"
# host: "jocampo-alten-app-challenge.herokuapp.com"
basePath: "/api/v1"
tags:
- name: "guests"
  description: "CRUD operations for the Guest entity"
- name: "rooms"
  description: "CRUD operations for the Room entity"
- name: "reservations"
  description: "CRUD operations for the Reservation entity"
schemes:
- "http"
- "https"
paths:
  /guests:
    get:
      tags:
      - "guests"
      summary: "List all guests in the hotel"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GuestResponse"
    post:
      tags:
      - "guests"
      summary: "Add a new guest to the hotel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Guest object that needs to be added to the hotel"
        required: true
        schema:
          $ref: "#/definitions/GuestRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "201":
          description: "Success, the following entity was created"
          schema:
            $ref: "#/definitions/GuestResponse"
  /guests/{guest_id}:
    get:
      tags:
      - "guests"
      summary: "Fetch a single Guest in the hotel"
      produces:
      - "application/json"
      parameters:
      - name: "guest_id"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GuestResponse"
    put:
      tags:
      - "guests"
      summary: "Update an existing guest in the hotel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "guest_id"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Fields we want to update in the Guest resource"
        required: true
        schema:
          $ref: "#/definitions/GuestRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success, the resource was updated. The complete upated resource is attached"
          schema:
            $ref: "#/definitions/GuestResponse"
    delete:
      tags:
      - "guests"
      summary: "Delete a Guest in the hotel"
      produces:
      - "application/json"
      parameters:
      - name: "guest_id"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "The specified resource was not found"
        "204":
          description: "Success. No body returned for the response"
          ###
  /rooms:
    get:
      tags:
      - "rooms"
      summary: "List all rooms in the hotel"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RoomResponse"
    post:
      tags:
      - "rooms"
      summary: "Add a new room to the hotel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Room object that needs to be added to the hotel"
        required: true
        schema:
          $ref: "#/definitions/RoomRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "201":
          description: "Success, the following entity was created"
          schema:
            $ref: "#/definitions/RoomResponse"
  /rooms/{room_id}:
    get:
      tags:
      - "rooms"
      summary: "Fetch a single Room in the hotel"
      produces:
      - "application/json"
      parameters:
      - name: "room_id"
        in: "path"
        description: "ID of room to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/RoomResponse"
    put:
      tags:
      - "rooms"
      summary: "Update an existing room in the hotel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "room_id"
        in: "path"
        description: "ID of room to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Fields we want to update in the Room resource"
        required: true
        schema:
          $ref: "#/definitions/RoomRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success, the resource was updated. The complete upated resource is attached"
          schema:
            $ref: "#/definitions/RoomResponse"
    delete:
      tags:
      - "rooms"
      summary: "Delete a Room in the hotel"
      produces:
      - "application/json"
      parameters:
      - name: "room_id"
        in: "path"
        description: "ID of room to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "The specified resource was not found"
        "204":
          description: "Success. No body returned for the response"
  /reservations:
    get:
      tags:
      - "reservations"
      summary: "List all reservations in the hotel"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ReservationResponse"
    post:
      tags:
      - "reservations"
      summary: "Add a new reservation to the hotel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Reservation object that needs to be added to the hotel"
        required: true
        schema:
          $ref: "#/definitions/ReservationRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "201":
          description: "Success, the following entity was created"
          schema:
            $ref: "#/definitions/ReservationResponse"
  /reservations/{reservation_id}:
    get:
      tags:
      - "reservations"
      summary: "Fetch a single Reservation in the hotel"
      produces:
      - "application/json"
      parameters:
      - name: "reservation_id"
        in: "path"
        description: "ID of reservation to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ReservationResponse"
    put:
      tags:
      - "reservations"
      summary: "Update an existing reservation in the hotel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "reservation_id"
        in: "path"
        description: "ID of reservation to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Fields we want to update in the Reservation resource"
        required: true
        schema:
          $ref: "#/definitions/ReservationRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success, the resource was updated. The complete upated resource is attached"
          schema:
            $ref: "#/definitions/ReservationResponse"
    delete:
      tags:
      - "reservations"
      summary: "Delete a Reservation in the hotel"
      produces:
      - "application/json"
      parameters:
      - name: "reservation_id"
        in: "path"
        description: "ID of reservation to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "The specified resource was not found"
        "204":
          description: "Success. No body returned for the response"
  /check_room_availability:
    post:
      tags:
      - "rooms"
      summary: "Checks the availability of a room in the hotel for a given date range"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request object to check for room availability"
        required: true
        schema:
          $ref: "#/definitions/CheckRoomAvailabilityRequest"
      responses:
        "400":
          description: "Bad request (the message will indicate what's wrong with it)"
          schema:
            $ref: "#/definitions/ErrorMessage"
        "404":
          description: "The specified resource was not found"
        "200":
          description: "Success"
          schema:
            type: "boolean"
definitions:
  GuestRequest:
    type: "object"
    required:
    - "document"
    - "first_name"
    - "last_name"
    properties:
      document:
        type: "string"
        example: "12345678"
      first_name:
        type: "string"
        example: "Jorge"
      last_name:
        type: "string"
        example: "Ocampo"
      is_active:
        type: "boolean"
  GuestResponse:
    type: "object"
    required:
    - "document"
    - "first_name"
    - "last_name"
    properties:
      id:
        type: "integer"
        format: "int64"
      document:
        type: "string"
        example: "12345678"
      first_name:
        type: "string"
        example: "Jorge"
      last_name:
        type: "string"
        example: "Ocampo"
      is_active:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  RoomRequest:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Suite 203"
      capacity:
        type: "integer"
        format: "int32"
      is_active:
        type: "boolean"
  RoomResponse:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Suite 203"
      capacity:
        type: "integer"
        format: "int32"
      is_active:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  ReservationRequest:
    type: "object"
    required:
    - "room_id"
    - "guest_id"
    - "start_date"
    - "end_date"
    properties:
      room_id:
        type: "integer"
        format: "int64"
      guest_id:
        type: "integer"
        format: "int64"
      start_date:
        type: "string"
        format: "date-time"
      end_date:
        type: "string"
        format: "date-time"
      amount_of_guests:
        type: "integer"
        format: "int32"
      status:
        type: "string"
        description: "Reservation Status"
        enum:
        - "SCHEDULED"
        - "CANCELED"
  ReservationResponse:
    type: "object"
    required:
    - "room_id"
    - "guest_id"
    - "start_date"
    - "end_date"
    properties:
      id:
        type: "integer"
        format: "int64"
      room_id:
        type: "integer"
        format: "int64"
      guest_id:
        type: "integer"
        format: "int64"
      start_date:
        type: "string"
        format: "date-time"
      end_date:
        type: "string"
        format: "date-time"
      amount_of_guests:
        type: "integer"
        format: "int32"
      status:
        type: "string"
        description: "Reservation Status"
        enum:
        - "SCHEDULED"
        - "CANCELED"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  CheckRoomAvailabilityRequest:
    type: "object"
    required:
    - "room_id"
    - "start_date"
    - "end_date"
    properties:
      room_id:
        type: "integer"
        format: "int64"
      start_date:
        type: "string"
        format: "date-time"
      end_date:
        type: "string"
        format: "date-time"
  ErrorMessage:
    type: "object"
    properties:
      message:
        type: "string"